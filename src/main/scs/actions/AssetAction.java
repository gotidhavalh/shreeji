package main.scs.actions;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.log4j.Logger;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import com.google.gson.Gson;
import main.scs.common.ListDesignation;
import main.scs.dao.DBConnection;
import main.scs.dto.AssetDTO;

public class AssetAction
{
	Logger logger = Logger.getLogger(AssetAction.class);
	HttpServletRequest request;
	HttpServletResponse response;

	public AssetAction()
	{
		super();
	}

	public void getAssetList(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		// List<AssetDTO> assetList = new ArrayList<>();
		//
		// try (Connection con = DBConnection.getDBConnection();
		// PreparedStatement pStmt = con.prepareStatement("SELECT AssetID,AssetName, HolderName, SKU, AssetDetail, AssetImage from Asset ");
		// ResultSet rSet = pStmt.executeQuery())
		// {
		// AssetDTO assetDTO = null;
		// while (rSet.next())
		// {
		// assetDTO = new AssetDTO();
		//
		// assetDTO.setId(rSet.getInt("AssetID"));
		// assetDTO.setName(rSet.getString("AssetName"));
		// assetDTO.setHolderName(rSet.getString("HolderName"));
		// assetDTO.setSku(rSet.getString("SKU"));
		//
		// assetList.add(assetDTO);
		// }
		// }
		// catch (Exception e)
		// {
		// logger.error(" Exception in getAssetList of MultiPartController - " + e.getLocalizedMessage(), e);
		// }

		// request.setAttribute("assetList", ListDesignation.listAsset());
		request.getRequestDispatcher("/WEB-INF/pages/asset/datatableForAsset.jsp").forward(request, response);
	}

	public void getAssetListJSON(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{

		JSONObject json = new JSONObject();

		JSONArray array = new JSONArray();

		List<AssetDTO> assetList = ListDesignation.listAsset();

		int i = 1;
		for (AssetDTO asset : assetList)
		{
			HashMap<String, Object> map = new HashMap<String, Object>();
			String row_id = "row_" + i;
			map.put("DT_RowId", row_id);
			map.put("ID", asset.getId());
			map.put("AssetName", asset.getName());
			map.put("HolderName", asset.getHolderName());

			array.add(map);
			i = i + 1;
		}

		json.put("data", array);

		System.out.println(" JSON -  " + json.toJSONString());

		Gson gson = new Gson();
		response.setContentType("application/json");
		try
		{
			response.getWriter().write(gson.toJson(json));
		}
		catch (Exception e)
		{
			logger.error(" Error while parsing JSON Format in getAssetListJSON - " + e.getMessage(), e);
		}

	}

	public void storeAssetForm(HttpServletRequest request, HttpServletResponse response, HashMap<String, Object> map) throws ServletException, IOException
	{

		String assetName = (String) map.get("assetname");
		String holderName = (String) map.get("holdername");
		String sku = (String) map.get("sku");
		String assetDetail = (String) map.get("assetDetail");
		InputStream fileContent = (InputStream) map.get("assetImage");

		try (Connection con = DBConnection.getDBConnection();
				PreparedStatement pStmt = con.prepareStatement(" INSERT INTO Asset(AssetName, HolderName, SKU, AssetDetail, AssetImage) values (?, ?, ?, ?, ?)", PreparedStatement.RETURN_GENERATED_KEYS))
		{
			pStmt.setString(1, assetName);
			pStmt.setString(2, holderName);
			pStmt.setString(3, sku);
			pStmt.setString(4, assetDetail);
			pStmt.setBinaryStream(5, fileContent);

			pStmt.executeUpdate();

			ResultSet tableKeys = pStmt.getGeneratedKeys();
			tableKeys.next();
			int autoGeneratedID = tableKeys.getInt(1);

			System.out.println("autoGeneratedID - " + autoGeneratedID);

			String path = (String) map.get("path");

			if (path != null)
			{
				File dir = new File(path);
				dir.mkdirs();
				File newFile = new File(dir, "Asset_" + autoGeneratedID + ".jpg");
				File oldFile = new File(path + "/filename123.jpg");

				if (oldFile.renameTo(newFile))
				{
					logger.info("File move success");
				}
				else
				{
					logger.info("File move failed");
				}
			}
			tableKeys.close();

			request.getSession().setAttribute("responseType", "success");
			request.getSession().setAttribute("responseMessage", "New Asset added successfully.");
		}
		catch (Exception e)
		{
			logger.error(" Exception in storeAssetForm of AssetAction - " + e.getLocalizedMessage(), e);

			request.getSession().setAttribute("responseType", "fail");
			request.getSession().setAttribute("responseMessage", "Something wrong occured while adding new asset. Error - " + e.getLocalizedMessage());
		}
		// request.setAttribute("assetList", ListDesignation.listAsset());
		request.getRequestDispatcher("/WEB-INF/pages/asset/datatableForAsset.jsp").forward(request, response);
	}

	public void viewAsset(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		List<AssetDTO> assetList = new ArrayList<>();
		int id = Integer.parseInt(request.getParameter("id").trim());
		String view = request.getParameter("view").trim();
		try (Connection con = DBConnection.getDBConnection();
				PreparedStatement pStmt = con.prepareStatement("SELECT AssetID,AssetName, HolderName, SKU, AssetDetail, AssetImage from Asset WHERE  AssetID=?");)
		{
			pStmt.setInt(1, id);
			ResultSet rSet = pStmt.executeQuery();
			AssetDTO assetDTO = null;
			while (rSet.next())
			{
				assetDTO = new AssetDTO();

				assetDTO.setId(rSet.getInt("AssetID"));
				assetDTO.setName(rSet.getString("AssetName"));
				assetDTO.setHolderName(rSet.getString("HolderName"));
				assetDTO.setSku(rSet.getString("SKU"));
				assetDTO.setDescription(rSet.getString("AssetDetail"));
				assetList.add(assetDTO);
			}
		}
		catch (Exception e)
		{
			logger.error(" Exception in viewAsset of AssetAction - " + e.getLocalizedMessage(), e);
		}

		request.setAttribute("assetList", assetList);
		if (view.equalsIgnoreCase("view"))
		{
			request.getRequestDispatcher("/WEB-INF/pages/asset/viewAsset.jsp").forward(request, response);
		}
		if (view.equalsIgnoreCase("edit"))
		{

			request.getRequestDispatcher("/WEB-INF/pages/asset/editAsset.jsp").forward(request, response);
		}
	}

	public void editAsset(HttpServletRequest request, HttpServletResponse response, HashMap<String, Object> map) throws ServletException, IOException
	{
		AssetDTO asset = new AssetDTO();
		int id = Integer.parseInt((String) map.get("id"));
		asset.setName((String) map.get("assetname"));
		asset.setHolderName((String) map.get("holdername"));
		asset.setSku((String) map.get("sku"));
		asset.setDescription((String) map.get("assetDetail"));
		InputStream fileContent = (InputStream) map.get("assetImage");

		try (Connection con = DBConnection.getDBConnection();
				PreparedStatement pstUpdate = con.prepareStatement("UPDATE Asset SET AssetName=?, HolderName=?,SKU=?,AssetDetail=?,AssetImage=? WHERE AssetID=?");)
		{
			String path = (String) map.get("path");
			if (path != null)
			{
				File dir = new File(path);
				dir.mkdirs();
				File newFile = new File(dir, "Asset_" + id + ".jpg");
				File oldFile = new File(path + "/filename123.jpg");

				if (newFile.exists() && !newFile.isDirectory())
				{
					newFile.delete();
				}
				newFile = new File(dir, "Asset_" + id + ".jpg");
				if (oldFile.renameTo(newFile))
				{
					logger.info("File move success for Asset ID - " + id);
				}
				else
				{
					logger.info("File move fail for Asset ID - " + id);
				}
			}

			pstUpdate.setString(1, asset.getName());
			pstUpdate.setString(2, asset.getHolderName());
			pstUpdate.setString(3, asset.getSku());
			pstUpdate.setString(4, asset.getDescription());
			pstUpdate.setBinaryStream(5, fileContent);
			pstUpdate.setInt(6, id);
			pstUpdate.executeUpdate();

			request.getSession().setAttribute("responseType", "success");
			request.getSession().setAttribute("responseMessage", " Asset edited successfully. ");

		}
		catch (Exception e)
		{
			logger.error(" Exception in editAsset of AssetAction - " + e.getLocalizedMessage(), e);

			request.getSession().setAttribute("responseType", "fail");
			request.getSession().setAttribute("responseMessage", "Something wrong occured while editing asset. Error - " + e.getLocalizedMessage());
		}

		RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/pages/asset/datatableForAsset.jsp");
		rd.forward(request, response);
	}

	public void deleteAsset(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		int id = Integer.parseInt(request.getParameter("id").trim());
		try (Connection connection = DBConnection.getDBConnection();
				PreparedStatement pstdelete = connection.prepareStatement("DELETE FROM Asset WHERE AssetID= ?");)
		{
			pstdelete.setInt(1, id);
			pstdelete.executeUpdate();

			request.getSession().setAttribute("responseType", "success");
			request.getSession().setAttribute("responseMessage", "Asset deleted successfully.");
		}
		catch (Exception e)
		{
			logger.error(" Exception in deleteAsset of MainController - " + e.getLocalizedMessage(), e);

			request.getSession().setAttribute("responseType", "fail");
			request.getSession().setAttribute("responseMessage", "Something wrong occured while deleting asset. Error - " + e.getLocalizedMessage());
		}
		request.setAttribute("assetList", ListDesignation.listAsset());
		request.getRequestDispatcher("/WEB-INF/pages/asset/datatableForAsset.jsp").forward(request, response);

	}
}
